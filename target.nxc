#define BT_CONN 0
#define INBOX 5
float l1,l2,l3;
int BTMailbox = 0;
long BTtime = 0;
float random;
long time1;
long time2;
long time3;
int x=0;
int y=0;
int z=0;
int triger=1;
int triger2 = 0;
int target=0;
int history[3]={0,0,0};
int brain[4][4][4][4];
int position1=0;
int es1=0;
int u1=0;
int position3=0;
int es3=0;
int u3=0;
int e3;
int position2=0;
int es2=0;
int u2=0;
int e2;
float Pk=3;
float PD=6;
int e1=0;
bool BTCheck(int conn)
{
  if (BluetoothStatus(conn) == NO_ERR) return true;
  else return false;
}
task pid()
{
  es1=0;
  es2 = 0;
  es3 = 0;
  while(true){
    e1 = MotorRotationCount(OUT_A)-position1;
    e2 = MotorRotationCount(OUT_B)-position2;
    e3 = MotorRotationCount(OUT_C)-position3;
    u1 = e1*Pk+PD*(e1-es1);
    u2 = e2*Pk+PD*(e2-es2);
    u3 = e3*Pk+PD*(e3-es3);
    if(u1>100) u1=100;
    if(u2>100) u2=100;
    if(u3>100) u3=100;
    if(u1<-100) u1=-100;
    if(u2<-100) u2=-100;
    if(u3<-100) u3=-100;
    if(abs(e1)>15) OnRev(OUT_A,u1);
    else Off(OUT_A);
    es1 = e1;
    if(abs(e2)>15) OnRev(OUT_B,u2);
    else Off(OUT_B);
    es2 = e2;
    if(abs(e3)>15) OnRev(OUT_C,u3);
    else Off(OUT_C);
    es3 = e3;
  }
}
task main(){
  OnFwd(OUT_ABC,18);
  Wait(3000);
  for(int x=0;x<=3;x++){
    for(int y=0;y<=3;y++){
      for(int z=0;z<=3;z++){
        for(int t=0;t<=3;t++){
          brain[x][y][z][t]=1;
        }
      }
    }
  }
  ResetRotationCount(OUT_A);
  ResetRotationCount(OUT_B);
  ResetRotationCount(OUT_C);
  Wait(3000);
  Off(OUT_ABC);
  start pid;
  SetSensorColorNone(IN_3);
  SetSensorLight(IN_2,0);
  SetSensorLight(IN_1,0);
  position1=-80;
  position2=-80;
  position3=-80;
  Wait(500);
  l1=Sensor(IN_1);
  l2=Sensor(IN_2);
  l3=Sensor(IN_3);
  position1=-30;
  position2=-30;
  position3=-30;
  while(true){
    if(triger>0){
      x=brain[history[0]][history[1]][history[2]][1];
      y=brain[history[0]][history[1]][history[2]][2];
      z=brain[history[0]][history[1]][history[2]][3];
      random = abs(Random((x+y+z)*1000)/1000.0);
      if(random<=x ){
        position1=-80;
        target=1;
      }
      else {
        if(random<=x+y){
          position2=-80;
          target=2;
        }
        else{
          if(random<=x+y+z){
            position3=-80;
            target=3;
          }
        }
      }
    }
    BTMailbox=0;
    while(BTMailbox==0){
      if (BTCheck(BT_CONN)) {
        ReceiveRemoteNumber(INBOX, true, BTMailbox);
      }
    }
    triger=0;
    if(target == 1){
      if(Sensor(IN_1)>=l1+0.01){
        position1= -30;
        Wait(1000);
        triger+=1;
      }
      else{
        triger2=1;
        SetSensorLight(IN_1,1);
        Wait(500);
        SetSensorLight(IN_1,0);
      }
    }
    if(target== 2){
      if(Sensor(IN_2)>=l2+0.01){
        position2= -30;
        Wait(1000);
        triger+=1;
      }
      else{
        SetSensorLight(IN_2,1);
        Wait(500);
        SetSensorLight(IN_2,0);
        triger2=2;
      }
    }
    if(target==3){
      if(Sensor(IN_3)>=l3+0.01){
        position3= -30;
        Wait(1000);
        triger+=1;
      }
      else{
        SetSensorColorRed(IN_3);
        Wait(500);
        SetSensorColorNone(IN_3);
        triger2=3;
      }
    }
    if(triger==0) brain[history[0]][history[1]][history[2]][target]+=1;
    else{
      if(brain[history[0]][history[1]][history[2]][target]>1){
        brain[history[0]][history[1]][history[2]][target]-=1;
      }
    }
    history[0]=history[1];
    history[1]=history[2];
    history[2]=target;
  }
}
